module mux(s1,s0,a,b,c,d,y);
input s1,s0,a,b,c,d;
output y;
assign y = (~s1&~s0&a) | (~s1&s0&b) | (s1&~s0&c) | (s1&s0&d);

endmodule

module test;
reg s1,s0,a,b,c,d;
wire y;

mux obj(s1,s0,a,b,c,d,y);

initial begin

$display("a b c d s1 s2 | y");
$monitor("%b\t%b\t%b\t%b\t%b\t%b\t| %b",a,b,c,d,s1,s0,y);


a=0; b=0; c=0; d=0; s1=0; s0=0;
#10 a=0; b=0; c=0; d=0; s1=0; s0=0;
#10 a=0; b=0; c=0; d=1; s1=0; s0=1;
#10 a=0; b=0; c=1; d=0; s1=1; s0=0;
#10 a=0; b=0; c=1; d=1; s1=1; s0=1;
#10 a=0; b=1; c=0; d=0; s1=0; s0=0;
#10 a=0; b=1; c=0; d=1; s1=0; s0=1;
#10 a=0; b=1; c=1; d=0; s1=1; s0=0;
#10 a=0; b=1; c=1; d=1; s1=1; s0=1;
#10 a=1; b=0; c=0; d=0; s1=0; s0=0;
#10 a=1; b=0; c=0; d=1; s1=0; s0=1;

end
endmodule



multiplexer